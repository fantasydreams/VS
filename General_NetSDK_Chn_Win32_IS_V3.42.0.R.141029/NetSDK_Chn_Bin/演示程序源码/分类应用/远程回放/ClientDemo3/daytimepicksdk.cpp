// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "daytimepicksdk.h"

/////////////////////////////////////////////////////////////////////////////
// CDayTimePickSDK

IMPLEMENT_DYNCREATE(CDayTimePickSDK, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CDayTimePickSDK properties

/////////////////////////////////////////////////////////////////////////////
// CDayTimePickSDK operations

void CDayTimePickSDK::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CDayTimePickSDK::AddTimeBlock(long nStartSecondOfOneDay, long nEndSecondOfOneDay, long nRGBColor)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nStartSecondOfOneDay, nEndSecondOfOneDay, nRGBColor);
	return result;
}

long CDayTimePickSDK::ClearTimeBlock()
{
	long result;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CDayTimePickSDK::SetCurrentTime(long nStartSecondOfOneDay)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nStartSecondOfOneDay);
	return result;
}

long CDayTimePickSDK::GetCurrentTimeOfSecond()
{
	long result;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CDayTimePickSDK::SetColor(long textColor, long bkColor, long lineColor, long timeBolckColor, long timeTextColor)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		textColor, bkColor, lineColor, timeBolckColor, timeTextColor);
	return result;
}

long CDayTimePickSDK::IsTimeExist(long nHour, long nMinute, long nSecond)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nHour, nMinute, nSecond);
	return result;
}
